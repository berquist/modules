#%Module

# Original by Albert DeFusco, III
# Modified version by Antonio M. Ferreira

# ======================================================================
#  Load useful procedures and variables to be using in this modulefile
# ======================================================================

# ======================================================================
# Useful Local Variables
# ======================================================================

#  $moddir       : The path to this module file
#  $modfile      : This module's file path relative to modulefiles root
#  $submods      : List of submodules
#  $modfile_base : This module's plain file name
#  $ver          : Module version (same as $modfile_base for now)

set moddir [ file dirname $ModulesCurrentModulefile ]
set modfile [ module-info name ]
set submods [ split "$modfile" / ]
set modfile_base [ lindex $submods [ expr [ llength $submods ] - 1 ] ]
set ver $modfile_base
#
# PACKAGE SPECIFIC VARIABLES
#  $packagename  : The name of the package for this module
#  $packageURL   : The URL for the package website
#  $helpfile     : The name of the file containing the long help text
#
set packagename "NWChem"
set packageURL "http://www.nwchem-sw.org"
set helpfile "6.5.help"


# ======================================================================
# Documentation
# ======================================================================
# This defines what the user will see when they issue a "module whatis"
# command.
#
module-whatis "$packagename version $ver\n\nURL: $packageURL\n"


# This defines what will be shown to the user when they issue a
# "module help" command. See the "template.help" file in this same
# directory for an example of what to include.
#
proc ModulesHelp { } {
    global packagename packageURL helpfile ver moddir modfile
    puts stderr "$packagename version $ver"
    puts stderr "URL: $packageURL"
    puts stderr "module file: $modfile"
    print_bar
    print_file $moddir/$helpfile
}


# ====================================================================
# Dependencies
# ====================================================================
# Put commands to load modules to satisfy dependencies here. In order
# to use the module-load-clean command, you must include the "source
# $env(MODULEPROCS)" command at the beginning of this file.
# NOTE: The module-load-clean can only process one dependency at a
#       time. Furthermore, module-load-clean WILL load the module if
#       it has not been loaded previously.
#
module load sys modules
module load intel/11.1.072
module load mkl/11.1.072/icc-st
module load mpi/mvapich2/1.5.1-intel-fast



# ====================================================================
# Conflicting modules
# ====================================================================
# Any modules specified in this section will cause the loading of this
# module to fail. There is currently no mechanism to forcibly unload
# conflicting modules. If a directory name is specified, then any of
# the modules under that directory will cause a conflict.
#
# conflict <package>   OR   conflict <package directory>


# ====================================================================
# Local settings
# ====================================================================
# The scope of the "set" command used here is only this module file.
# If you want to set environment variables, use the "setenv" in the
# "Environment Variables" section below.
#
set module_root /opt/sam/nwchem/6.5-26243


# ====================================================================
# Environment Variables
# ====================================================================
# Add stuff to PATH, LD_LIBRARY_PATH, MANPATH, etc..
#
# setenv PACKAGE_ROOT $module_root
# prepend-path LD_LIBRARY_PATH $module_root/lib
# prepend-path LIBRARY_PATH $module_root/lib
# prepend-path MANPATH $module_root/share/man
# prepend-path CPATH $module_root/lib
# prepend-path C_INCLUDE_PATH $module_root/include
# prepend-path CPLUS_INCLUDE_PATH $module_root/include
prepend-path PATH ${module_root}/bin/LINUX64
